<macros>
    <token name="@VERSION@">0.19.1</token>
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="@VERSION@">csvtk</requirement>
        </requirements>
    </xml>
    <xml name="multi_input">
        <param type="data" name="in_1" format="csv,tabular"
            multiple="true" optional="false"
            label="Specify TSV or CSV file inputs"
            help="Input tsv or csv files to analyze. HOWEVER, they must all be the **same file type** or the tool will fail/not give results!"
            />
    </xml>
    <xml name="singular_input">
        <param type="data" name="in_1" format="csv,tabular"
            multiple="false" optional="false"
            label="Specify an input TSV or CSV file"
            help="Input a TSV or CSV file to work on"
            />
    </xml>
    <xml name="ignore_case">
        <param type="boolean" name="ignore_case"
            falsevalue="" truevalue="-i"
            checked="true"
            label="Ignore cell case?"
            help="ABC == abc"
            />
    </xml>
    <xml name="global_parameters">
        <section name="global_param" title="Global Parameters" expanded="true">
            <param type="boolean" name="header"
                falsevalue="-H" truevalue=""
                checked="true"
                label="Input file has a header line"
                />
            <param type="boolean" name="illegal_rows"
                falsevalue="" truevalue="-I"
                checked="false"
                label="Ignore illegal rows"
                help="Use if file has illegal rows as defined in the help section"
                />
            <param type="boolean" name="empty_rows"
                falsevalue="" truevalue="-E"
                checked="false"
                label="Ignore empty rows"
                help="Ignore rows with no data (only needed if input has empty rows)"
                />
            <param type="boolean" name="lazy_quotes"
                falsevalue="" truevalue="-l"
                checked="false"
                label="File has Lazy quotes"
                help="(TSV files only) If Yes, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"
                />
        </section>
    </xml>
    <xml name="fields_input">
        <conditional name="column_text" >
            <param type="select" name="select" label="Select input columns based on" >
                <option value="string">Column Name(s)</option>
                <option value="column">Column Number(s)</option>
            </param>
            <when value="column">
                <param type="data_column" name="in_text"
                        data_ref="in_1"
                        multiple="true"
                        label="Input column number(s)"
                        help="Select column(s) to use for analysis"
                        />
            </when>
            <when value="string">
                <param type="text" name="in_text"
                    optional="false"
                    label="Input column name(s)"
                    help="Multiple columns can be given if separated by a ' , '. 
                    Column numbers can be given too - ex. '1,2' will target columns 1 and 2. 
                    Please see the help section below for more detailed info"
                    />
            </when>
        </conditional>
    </xml>
    <token name="@HELP_COLUMNS@">
Column Name Input Help
######################

- Multiple names can be given if separated by a ' , '.

    - ex. 'ID,Organism' would target the columns named ID and Organism for the function 

- Column numbers can also be given:

    -e x. '1,2,3' for inputting columns 1-3.

- You can also specify all but unwanted column(s) with a ' - '.

    - ex. '-ID' would target all columns but the ID column

----
    </token>
    <token name="@HELP_INPUT_DATA@">
Input Data
##########

::

    **Limitations of Input Data**

    1. The CSV parser requires all the lines have same number of fields/columns.
        If your file has illegal rows, set the "Illegal Rows" parameter to "Yes" to pass your data through
        Even lines with spaces will cause error.
        Example bad table below.

    2. Column names should be unique!

    3. Lines starting with "#" or "$" will be ignored, if in the header row

    4. If " exists in tab-delimited files, set Lazy quotes global parameter to "Yes"

Example bad table:

+--------+--------+--------+--------+
| Head 1 | Head 2 | Head 3 | Head 4 |
+========+========+========+========+
| 1      | 2      | 3      |        |
+--------+--------+--------+--------+
| this   | will   |        | break  |
+--------+--------+--------+--------+

----
    </token>
    <token name="@HELP_END_STATEMENT@">
More Information
################
For information from the creators of csvtk, please visit their site at: https://bioinf.shenwei.me/csvtk/

Although be aware that some features may not be available and some small changes were made to work with Galaxy.

**Notable changes from their documentation:**

- Cannot specify multiple file header names (IE cannot use "name;username" as a valid column match)

- Column Names are Case Sensitive
    </token>
    <xml name="citations">
        <citations>
            <citation type="bibtex">@ARTICLE{a1,
                title = {csvtk - CSV/TSV Toolkit},
                author = {Wei Shen},
                url = {https://github.com/shenwei356/csvtk}
                }
            }</citation>
        </citations>
    </xml>
</macros>